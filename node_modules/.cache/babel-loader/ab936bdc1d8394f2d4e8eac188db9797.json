{"ast":null,"code":"var _jsxFileName = \"/home/yta-odoo/Documents/pic/recat practice/expence-tracker/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport classes from './AuthForm.module.css';\nimport AuthContext from '../../store/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const ctx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    if (email && password) {\n      let url = \"\";\n\n      if (isLogin) {\n        url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo';\n      } else {\n        url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo';\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          'email': email,\n          'password': password,\n          'returnSecureToken': true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw new Error(\"auth fail\");\n        }\n      }).then(async data => {\n        ctx.onLogin(email, data.idToken);\n        const res = await fetch(`https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\"email\")}\"&print=pretty`);\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"ot9Nz8v7qAcZsraaAs5kh1DXtn0=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/yta-odoo/Documents/pic/recat practice/expence-tracker/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","classes","AuthContext","AuthForm","isLogin","setIsLogin","emailRef","passwordRef","ctx","switchAuthModeHandler","prevState","onSubmitHandler","event","preventDefault","email","current","value","password","url","fetch","method","body","JSON","stringify","headers","then","res","ok","json","Error","data","onLogin","idToken","localStorage","getItem","catch","error","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\n\nimport classes from './AuthForm.module.css';\nimport AuthContext from '../../store/AuthContext';\n\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const ctx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    if (email && password){\n        let url = \"\";\n        if (isLogin) {\n          url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo';\n        }else {\n          url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo'; \n        }\n        fetch(\n          url,\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              'email':email,\n              'password': password,\n              'returnSecureToken': true\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }\n        ).then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error(\"auth fail\");\n          }\n        }).then(async (data) => {\n          ctx.onLogin(email, data.idToken);\n          const res = await fetch(\n            `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\n              \"email\"\n            )}\"&print=pretty`\n          );\n        }).catch(error => {\n          alert(error)\n        });\n    }\n    \n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={onSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passwordRef} required />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}