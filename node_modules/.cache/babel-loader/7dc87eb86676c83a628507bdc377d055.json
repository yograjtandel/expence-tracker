{"ast":null,"code":"import _asyncToGenerator from\"/home/yta-odoo/Documents/expence-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/home/yta-odoo/Documents/expence-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/yta-odoo/Documents/expence-tracker/node_modules/@babel/runtime/regenerator/index.js\";import{createSlice}from\"@reduxjs/toolkit\";var initialState={filterYear:\"2022\",userID:\"\",expences:[]};var ExpencesSlice=createSlice({name:\"Expences\",initialState:initialState,reducers:{updateExpence:function updateExpence(state,action){// debugger\nstate.expences=[].concat(_toConsumableArray(state.expences),_toConsumableArray(action.payload));},filter:function filter(state,action){state.filterYear=action.payload;},addUserId:function addUserId(state,action){state.userID=action.payload;localStorage.setItem('userId',state.userID);}}});export var AddExpence=function AddExpence(expence){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var userId,add_expence,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:userId=getState().expences.userID;debugger;add_expence=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var expenceRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://expencetracker-b3897-default-rtdb.firebaseio.com/users/\".concat(userId,\".json\"),{method:\"post\",body:JSON.stringify(expence),headers:{\"Content-Type\":\"Application/Json\"}});case 2:expenceRes=_context.sent;if(!expenceRes.ok){_context.next=7;break;}return _context.abrupt(\"return\",expenceRes.json());case 7:throw new Error(\"not able to add new expence\");case 8:case\"end\":return _context.stop();}}},_callee);}));return function add_expence(){return _ref2.apply(this,arguments);};}();if(userId){try{res=add_expence();res.then(function(data){debugger;expence['id']=data['name'];dispatch(ExpencesAction.updateExpence([expence]));});debugger;}catch(error){alert(error);}}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var ExpencesAction=ExpencesSlice.actions;export default ExpencesSlice.reducer;","map":{"version":3,"sources":["/home/yta-odoo/Documents/expence-tracker/src/store/expences-slice.js"],"names":["createSlice","initialState","filterYear","userID","expences","ExpencesSlice","name","reducers","updateExpence","state","action","payload","filter","addUserId","localStorage","setItem","AddExpence","expence","dispatch","getState","userId","add_expence","fetch","method","body","JSON","stringify","headers","expenceRes","ok","json","Error","res","then","data","ExpencesAction","error","alert","actions","reducer"],"mappings":"qYAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,MADO,CAEnBC,MAAM,CAAE,EAFW,CAGnBC,QAAQ,CAAE,EAHS,CAArB,CAKA,GAAMC,CAAAA,aAAa,CAAGL,WAAW,CAAC,CAChCM,IAAI,CAAE,UAD0B,CAEhCL,YAAY,CAAZA,YAFgC,CAGhCM,QAAQ,CAAE,CACRC,aADQ,wBACMC,KADN,CACaC,MADb,CACqB,CAC3B;AACAD,KAAK,CAACL,QAAN,8BAAqBK,KAAK,CAACL,QAA3B,qBAAwCM,MAAM,CAACC,OAA/C,GACD,CAJO,CAKRC,MALQ,iBAKDH,KALC,CAKMC,MALN,CAKc,CACpBD,KAAK,CAACP,UAAN,CAAmBQ,MAAM,CAACC,OAA1B,CACD,CAPO,CAQRE,SARQ,oBAQEJ,KARF,CAQSC,MART,CAQiB,CACvBD,KAAK,CAACN,MAAN,CAAeO,MAAM,CAACC,OAAtB,CACAG,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+BN,KAAK,CAACN,MAArC,EACD,CAXO,CAHsB,CAAD,CAAjC,CAkBA,MAAO,IAAMa,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAa,CACrC,+FAAO,kBAAOC,QAAP,CAAiBC,QAAjB,iJACDC,MADC,CACQD,QAAQ,GAAGf,QAAX,CAAoBD,MAD5B,CAEL,SACMkB,WAHD,2FAGe,wKACOC,CAAAA,KAAK,0EACsCF,MADtC,UAE5B,CACEG,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAFR,CAGEU,OAAO,CAAE,CACP,eAAgB,kBADT,CAHX,CAF4B,CADZ,QACZC,UADY,mBAYdA,UAAU,CAACC,EAZG,yDAaTD,UAAU,CAACE,IAAX,EAbS,cAeV,IAAIC,CAAAA,KAAJ,CAAU,6BAAV,CAfU,uDAHf,kBAGCV,CAAAA,WAHD,4CAsBL,GAAID,MAAJ,CAAa,CACX,GAAI,CACIY,GADJ,CACUX,WAAW,EADrB,CAEFW,GAAG,CAACC,IAAJ,CAAS,SAAAC,IAAI,CAAE,CACb,SACAjB,OAAO,CAAC,IAAD,CAAP,CAAgBiB,IAAI,CAAC,MAAD,CAApB,CACAhB,QAAQ,CAACiB,cAAc,CAAC3B,aAAf,CAA6B,CAACS,OAAD,CAA7B,CAAD,CAAR,CACD,CAJD,EAKA,SACD,CAAC,MAAOmB,KAAP,CAAc,CACdC,KAAK,CAACD,KAAD,CAAL,CACD,CACF,CAlCI,wDAAP,mEAoCD,CArCM,CAuCP,MAAO,IAAMD,CAAAA,cAAc,CAAG9B,aAAa,CAACiC,OAArC,CACP,cAAejC,CAAAA,aAAa,CAACkC,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  filterYear: \"2022\",\n  userID: \"\",\n  expences: [],\n};\nconst ExpencesSlice = createSlice({\n  name: \"Expences\",\n  initialState,\n  reducers: {\n    updateExpence(state, action) {\n      // debugger\n      state.expences = [...state.expences, ...action.payload];\n    },\n    filter(state, action) {\n      state.filterYear = action.payload;\n    },\n    addUserId(state, action) {\n      state.userID = action.payload;\n      localStorage.setItem('userId', state.userID);\n    }\n  },\n});\n\nexport const AddExpence = (expence) => {\n  return async (dispatch, getState) => {\n    let userId = getState().expences.userID;\n    debugger\n    const add_expence = async () => {\n      const expenceRes = await fetch(\n        `https://expencetracker-b3897-default-rtdb.firebaseio.com/users/${userId}.json`,\n        {\n          method: \"post\",\n          body: JSON.stringify(expence),\n          headers: {\n            \"Content-Type\": \"Application/Json\",\n          },\n        }\n      );\n\n      if (expenceRes.ok) {\n        return expenceRes.json()\n      } else {\n        throw new Error(\"not able to add new expence\");\n      }\n    };\n\n    if( userId ) {\n      try {\n        const res = add_expence();\n        res.then(data=>{\n          debugger\n          expence['id'] = data['name'];\n          dispatch(ExpencesAction.updateExpence([expence]));\n        })\n        debugger\n      } catch (error) {\n        alert(error);\n      }\n    }\n  };\n};\n\nexport const ExpencesAction = ExpencesSlice.actions;\nexport default ExpencesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}