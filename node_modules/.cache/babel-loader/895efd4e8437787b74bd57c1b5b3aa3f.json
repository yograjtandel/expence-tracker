{"ast":null,"code":"var _jsxFileName = \"/home/yta-odoo/Documents/pic/recat practice/expence-tracker/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../../store/AuthContext\";\nimport { ExpencesAction } from '../../store/expences-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const ctx = useContext(AuthContext);\n  const dispatch = useDispatch(); // useSelector( state => state.expences.setUserId)\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    if (email && password) {\n      let url = \"\";\n\n      if (isLogin) {\n        url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo\";\n      } else {\n        url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo\";\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw new Error(\"auth fail\");\n        }\n      }).then(async data => {\n        ctx.onLogin(email, data.idToken);\n        const res = await fetch(`https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\"email\")}\"&print=pretty`);\n        res.json().then(data => {\n          const add_email = async () => {\n            const userRes = await fetch(\"https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json\", {\n              method: \"post\",\n              body: JSON.stringify({\n                email: localStorage.getItem(\"email\")\n              }),\n              headers: {\n                \"Content-Type\": \"Application/Json\"\n              }\n            });\n\n            if (userRes.ok) {\n              const id = userRes.json().then(user => {\n                return user[\"name\"];\n              });\n              userId = id;\n            } else {\n              throw new Error(\"not able to add email\");\n            }\n          };\n\n          if (Object.keys(data).length === 0) {\n            try {\n              add_email();\n            } catch (error) {\n              alert(error);\n            }\n          } else {\n            userId = Object.keys(data)[0];\n          }\n\n          dispatch(ExpencesAction.addUserId(Object.keys(data)[0]));\n        });\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"f5NST7XdmC0zBjVhX8XCtE/EVrM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/yta-odoo/Documents/pic/recat practice/expence-tracker/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useDispatch","classes","AuthContext","ExpencesAction","AuthForm","isLogin","setIsLogin","emailRef","passwordRef","ctx","dispatch","switchAuthModeHandler","prevState","onSubmitHandler","event","preventDefault","email","current","value","password","url","fetch","method","body","JSON","stringify","returnSecureToken","headers","then","res","ok","json","Error","data","onLogin","idToken","localStorage","getItem","add_email","userRes","id","user","userId","Object","keys","length","error","alert","addUserId","catch","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../../store/AuthContext\";\nimport { ExpencesAction } from '../../store/expences-slice'\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const ctx = useContext(AuthContext);\n  const dispatch = useDispatch();\n  // useSelector( state => state.expences.setUserId)\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    if (email && password) {\n      let url = \"\";\n      if (isLogin) {\n        url =\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo\";\n      } else {\n        url =\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDkyHz1CTqvoZKQHlZqcOmhjNwnAzH2HJo\";\n      }\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error(\"auth fail\");\n          }\n        })\n        .then(async (data) => {\n          ctx.onLogin(email, data.idToken);\n\n          const res = await fetch(\n            `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\n              \"email\"\n            )}\"&print=pretty`\n          );\n          res.json().then( data => {\n\n            const add_email = async () => {\n              const userRes = await fetch(\n                \"https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json\",\n                {\n                  method: \"post\",\n                  body: JSON.stringify({\n                    email: localStorage.getItem(\"email\"),\n                  }),\n                  headers: {\n                    \"Content-Type\": \"Application/Json\",\n                  },\n                }\n              );\n              if (userRes.ok) {\n                const id = userRes.json().then((user) => {\n                  return user[\"name\"];\n                });\n                userId = id;\n              } else {\n                throw new Error(\"not able to add email\");\n              }\n            };\n\n            if (Object.keys(data).length === 0) {\n              try {\n                add_email();\n              } catch (error) {\n                alert(error);\n              }\n            } else {\n              userId = Object.keys(data)[0];\n            }\n            dispatch(ExpencesAction.addUserId(Object.keys(data)[0]))\n          });\n        })\n        .catch((error) => {\n          alert(error);\n        });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={onSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" ref={emailRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" ref={passwordRef} required />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}