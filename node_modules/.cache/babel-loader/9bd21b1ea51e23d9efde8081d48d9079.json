{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  filterYear: \"\",\n  userID: \"\"\n};\nconst ExpencesSlice = createSlice({\n  name: \"Expences\",\n  initialState,\n  reducers: {\n    filter(state, action) {\n      debugger;\n      state.filterYear = action.payload;\n    },\n\n    addUserId(state, action) {\n      state.userID = action.payload;\n    }\n\n  }\n});\nexport const AddExpence = expence => {\n  return async (dispatch, getState) => {\n    let userId = getState().userID; // const add_email = async () => {\n    //   const userRes = await fetch(\n    //     \"https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json\",\n    //     {\n    //       method: \"post\",\n    //       body: JSON.stringify({\n    //         email: localStorage.getItem(\"email\"),\n    //       }),\n    //       headers: {\n    //         \"Content-Type\": \"Application/Json\",\n    //       },\n    //     }\n    //   );\n    //   if (userRes.ok) {\n    //     const id = userRes.json().then((user) => {\n    //       return user[\"name\"];\n    //     });\n    //     userId = id;\n    //   } else {\n    //     throw new Error(\"not able to add email\");\n    //   }\n    // };\n\n    const add_expence = async () => {\n      const expenceRes = await fetch(`https://expencetracker-b3897-default-rtdb.firebaseio.com/users/${userId}.json`, {\n        method: \"post\",\n        body: JSON.stringify(expence),\n        headers: {\n          \"Content-Type\": \"Application/Json\"\n        }\n      });\n\n      if (!expenceRes.ok) {\n        throw new Error(\"not able to add new expence\");\n      }\n    }; // if (!userId) {\n    //   const data = await fetch(\n    //     `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\n    //       \"email\"\n    //     )}\"&print=pretty`\n    //   );\n    //   data.json().then(async (data) => {\n    //     if (Object.keys(data).length === 0) {\n    //       try {\n    //         add_email();\n    //       } catch (error) {\n    //         alert(error);\n    //       }\n    //     } else {\n    //       userId = Object.keys(data)[0];\n    //     }\n    //   });\n    // }\n\n\n    if (userId) {\n      try {\n        add_expence();\n      } catch (error) {\n        alert(error);\n      }\n    }\n  };\n};\n_c = AddExpence;\nexport const ExpencesAction = ExpencesSlice.actions;\nexport default ExpencesSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpence\");","map":{"version":3,"sources":["/home/yta-odoo/Documents/pic/recat practice/expence-tracker/src/store/expences-slice.js"],"names":["createSlice","initialState","filterYear","userID","ExpencesSlice","name","reducers","filter","state","action","payload","addUserId","AddExpence","expence","dispatch","getState","userId","add_expence","expenceRes","fetch","method","body","JSON","stringify","headers","ok","Error","error","alert","ExpencesAction","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAIA,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AAChCK,EAAAA,IAAI,EAAE,UAD0B;AAEhCJ,EAAAA,YAFgC;AAGhCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpB;AACAD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACD,KAJO;;AAKRC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACD;;AAPO;AAHsB,CAAD,CAAjC;AAcA,OAAO,MAAME,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAIC,MAAM,GAAGD,QAAQ,GAAGZ,MAAxB,CADmC,CAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMc,WAAW,GAAG,YAAY;AAC9B,YAAMC,UAAU,GAAG,MAAMC,KAAK,CAC3B,kEAAiEH,MAAO,OAD7C,EAE5B;AACEI,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAFR;AAGEW,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF4B,CAA9B;;AAWA,UAAI,CAACN,UAAU,CAACO,EAAhB,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF,KAfD,CA1BmC,CA2CnC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAIV,MAAJ,EAAa;AACX,UAAI;AACFC,QAAAA,WAAW;AACZ,OAFD,CAEE,OAAOU,KAAP,EAAc;AACdC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF;AACF,GAtED;AAuED,CAxEM;KAAMf,U;AA0Eb,OAAO,MAAMiB,cAAc,GAAGzB,aAAa,CAAC0B,OAArC;AACP,eAAe1B,aAAa,CAAC2B,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  filterYear: \"\",\n  userID: \"\",\n};\nconst ExpencesSlice = createSlice({\n  name: \"Expences\",\n  initialState,\n  reducers: {\n    filter(state, action) {\n      debugger;\n      state.filterYear = action.payload;\n    },\n    addUserId(state, action) {\n      state.userID = action.payload;\n    }\n  },\n});\n\nexport const AddExpence = (expence) => {\n  return async (dispatch, getState) => {\n    let userId = getState().userID;\n\n    // const add_email = async () => {\n    //   const userRes = await fetch(\n    //     \"https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json\",\n    //     {\n    //       method: \"post\",\n    //       body: JSON.stringify({\n    //         email: localStorage.getItem(\"email\"),\n    //       }),\n    //       headers: {\n    //         \"Content-Type\": \"Application/Json\",\n    //       },\n    //     }\n    //   );\n    //   if (userRes.ok) {\n    //     const id = userRes.json().then((user) => {\n    //       return user[\"name\"];\n    //     });\n    //     userId = id;\n    //   } else {\n    //     throw new Error(\"not able to add email\");\n    //   }\n    // };\n\n    const add_expence = async () => {\n      const expenceRes = await fetch(\n        `https://expencetracker-b3897-default-rtdb.firebaseio.com/users/${userId}.json`,\n        {\n          method: \"post\",\n          body: JSON.stringify(expence),\n          headers: {\n            \"Content-Type\": \"Application/Json\",\n          },\n        }\n      );\n\n      if (!expenceRes.ok) {\n        throw new Error(\"not able to add new expence\");\n      }\n    };\n\n    // if (!userId) {\n    //   const data = await fetch(\n    //     `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\n    //       \"email\"\n    //     )}\"&print=pretty`\n    //   );\n\n    //   data.json().then(async (data) => {\n    //     if (Object.keys(data).length === 0) {\n    //       try {\n    //         add_email();\n    //       } catch (error) {\n    //         alert(error);\n    //       }\n    //     } else {\n    //       userId = Object.keys(data)[0];\n    //     }\n    //   });\n    // }\n\n    if( userId ) {\n      try {\n        add_expence();\n      } catch (error) {\n        alert(error);\n      }\n    }\n  };\n};\n\nexport const ExpencesAction = ExpencesSlice.actions;\nexport default ExpencesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}