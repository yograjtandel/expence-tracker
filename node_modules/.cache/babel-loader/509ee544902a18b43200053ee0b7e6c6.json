{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  id: null,\n  title: null,\n  amount: null,\n  date: null\n};\nconst ExpencesSlice = createSlice({\n  name: \"Expences\",\n  initialState,\n  reducers: {\n    add(expence) {},\n\n    filter(year) {}\n\n  }\n});\nexport const AddExpence = expence => {\n  // const ctx = useContext(AuthContext);\n  // debugger\n  return async () => {\n    // console.log(ctx.email);\n    const url = `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\"email\")}\"&print=pretty`;\n    debugger;\n    let userId = null;\n    const data = await fetch(`https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\"email\")}\"&print=pretty`);\n\n    const add_email = async () => {\n      debugger;\n      const userRes = await fetch(\"https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json\", {\n        method: \"post\",\n        body: JSON.stringify({\n          email: localStorage.getItem(\"email\")\n        }),\n        headers: {\n          \"Content-Type\": \"Application/Json\"\n        }\n      });\n\n      if (userRes.ok) {\n        const id = userRes.json().then(user => {\n          return user[\"name\"];\n        });\n        userId = id;\n      } else {\n        throw new Error(\"not able to add email\");\n      }\n    };\n\n    const add_expence = async () => {\n      debugger;\n      const expenceRes = fetch(`https://expencetracker-b3897-default-rtdb.firebaseio.com/users/${userId}.json`, {\n        method: \"post\",\n        body: JSON.stringify(expence),\n        headers: {\n          \"Content-Type\": \"Application/Json\"\n        }\n      });\n\n      if (!expenceRes.ok) {\n        throw new Error(\"not able to add new expence\");\n      }\n    };\n\n    data.json().then(async data => {\n      debugger;\n\n      if (Object.keys(data).length === 0) {\n        try {\n          add_email();\n        } catch (error) {\n          alert(error);\n        }\n      } else {\n        userId = Object.keys(data)[0];\n      }\n\n      try {\n        add_expence();\n      } catch (error) {\n        alert(error);\n      }\n    }); // debugger;\n  };\n};\n_c = AddExpence;\nexport default ExpencesSlice;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpence\");","map":{"version":3,"sources":["/home/yta-odoo/Documents/pic/recat practice/expence-tracker/src/store/expences-slice.js"],"names":["createSlice","initialState","id","title","amount","date","ExpencesSlice","name","reducers","add","expence","filter","year","AddExpence","url","localStorage","getItem","userId","data","fetch","add_email","userRes","method","body","JSON","stringify","email","headers","ok","json","then","user","Error","add_expence","expenceRes","Object","keys","length","error","alert"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,IADe;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAMA,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,UAD0B;AAEhCN,EAAAA,YAFgC;AAGhCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,CAACC,OAAD,EAAU,CAAE,CADP;;AAERC,IAAAA,MAAM,CAACC,IAAD,EAAO,CAAE;;AAFP;AAHsB,CAAD,CAAjC;AASA,OAAO,MAAMC,UAAU,GAAIH,OAAD,IAAa;AACrC;AACA;AACA,SAAO,YAAY;AACjB;AACA,UAAMI,GAAG,GAAI,gGAA+FC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,gBAA1I;AACA;AACA,QAAIC,MAAM,GAAG,IAAb;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,gGAA+FJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,gBADxG,CAAxB;;AAIA,UAAMI,SAAS,GAAG,YAAY;AAC5B;AACA,YAAMC,OAAO,GAAG,MAAMF,KAAK,CACzB,qEADyB,EAEzB;AACEG,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEX,YAAY,CAACC,OAAb,CAAqB,OAArB;AADY,SAAf,CAFR;AAKEW,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALX,OAFyB,CAA3B;;AAYA,UAAIN,OAAO,CAACO,EAAZ,EAAgB;AACd,cAAM1B,EAAE,GAAGmB,OAAO,CAACQ,IAAR,GAAeC,IAAf,CAAqBC,IAAD,IAAU;AACvC,iBAAOA,IAAI,CAAC,MAAD,CAAX;AACD,SAFU,CAAX;AAGAd,QAAAA,MAAM,GAAGf,EAAT;AACD,OALD,MAKO;AACL,cAAM,IAAI8B,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,KAtBD;;AAwBA,UAAMC,WAAW,GAAG,YAAW;AAC7B;AACA,YAAMC,UAAU,GAAIf,KAAK,CACtB,kEAAiEF,MAAO,OADlD,EAEvB;AACEK,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,OAAf,CAFR;AAGEiB,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAFuB,CAAzB;;AAWA,UAAI,CAACO,UAAU,CAACN,EAAhB,EAAmB;AACjB,cAAM,IAAII,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF,KAhBD;;AAkBAd,IAAAA,IAAI,CAACW,IAAL,GAAYC,IAAZ,CAAiB,MAAOZ,IAAP,IAAgB;AAC/B;;AACA,UAAIiB,MAAM,CAACC,IAAP,CAAYlB,IAAZ,EAAkBmB,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,YAAI;AACFjB,UAAAA,SAAS;AACV,SAFD,CAEE,OAAOkB,KAAP,EAAc;AACdC,UAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,OAND,MAMO;AACLrB,QAAAA,MAAM,GAAGkB,MAAM,CAACC,IAAP,CAAYlB,IAAZ,EAAkB,CAAlB,CAAT;AACD;;AAED,UAAG;AACDe,QAAAA,WAAW;AACZ,OAFD,CAEE,OAAOK,KAAP,EAAc;AACdC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAjBD,EAnDiB,CAqEjB;AACD,GAtED;AAuED,CA1EM;KAAMzB,U;AA4Eb,eAAeP,aAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  id: null,\n  title: null,\n  amount: null,\n  date: null,\n};\nconst ExpencesSlice = createSlice({\n  name: \"Expences\",\n  initialState,\n  reducers: {\n    add(expence) {},\n    filter(year) {},\n  },\n});\n\nexport const AddExpence = (expence) => {\n  // const ctx = useContext(AuthContext);\n  // debugger\n  return async () => {\n    // console.log(ctx.email);\n    const url = `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\"email\")}\"&print=pretty`\n    debugger\n    let userId = null;\n    const data = await fetch(\n      `https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json?orderBy=\"email\"&equalTo=\"${localStorage.getItem(\"email\")}\"&print=pretty`\n    );\n\n    const add_email = async () => {\n      debugger\n      const userRes = await fetch(\n        \"https://expencetracker-b3897-default-rtdb.firebaseio.com/users.json\",\n        {\n          method: \"post\",\n          body: JSON.stringify({\n            email: localStorage.getItem(\"email\"),\n          }),\n          headers: {\n            \"Content-Type\": \"Application/Json\",\n          },\n        }\n      );\n      if (userRes.ok) {\n        const id = userRes.json().then((user) => {\n          return user[\"name\"];\n        });\n        userId = id;\n      } else {\n        throw new Error(\"not able to add email\");\n      }\n    };\n\n    const add_expence = async() => {\n      debugger\n      const expenceRes  = fetch(\n        `https://expencetracker-b3897-default-rtdb.firebaseio.com/users/${userId}.json`,\n        {\n          method: \"post\",\n          body: JSON.stringify(expence),\n          headers: {\n            \"Content-Type\": \"Application/Json\",\n          },\n        }\n      );\n\n      if (!expenceRes.ok){\n        throw new Error(\"not able to add new expence\")\n      }\n    };\n\n    data.json().then(async (data) => {\n      debugger\n      if (Object.keys(data).length === 0) {\n        try {\n          add_email();\n        } catch (error) {\n          alert(error);\n        }\n      } else {\n        userId = Object.keys(data)[0];\n      }\n\n      try{\n        add_expence();\n      } catch (error) {\n        alert(error);\n      }\n    });\n    // debugger;\n  };\n};\n\nexport default ExpencesSlice;\n"]},"metadata":{},"sourceType":"module"}